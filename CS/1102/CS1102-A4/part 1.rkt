#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.10 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 72 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1           0 1185 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 189
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e |part 1|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings "
 #"#(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"racket/list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; ========================"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; ====DATA DEFINITIONS===="
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; ========================"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"widget"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 8 #"quantity"
0 0 24 3 1 #" "
0 0 14 3 5 #"price"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; a widget is a (make-widget String Natural Number)"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; same as assignment #3, except no parts component"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #" ("
0 0 14 3 6 #"widget"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; a BST is either"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;          false, or"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;          a (make-bst widget bst bst)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fn-for-bst"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"fn-for-bst"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"fn-for-bst"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fn-for-low"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 3 #") ("
0 0 14 3 10 #"fn-for-low"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; ========================="
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; ========FUNCTIONS========"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; ========================="
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Natural Natural -> (listof Widget)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"random-widgets"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 2 #") "
0 0 24 3 1 #"("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 2 #") "
0 0 24 3 1 #"("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"random-widgets"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 3 #"max"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; Widget Bst -> Bst"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"5000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"4000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"7000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;    5000"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;   /    \\"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; 4000  7000"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"1000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"1000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"6000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 4 #"BST1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"5000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"4000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"7000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"6000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"5000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 4 #"BST1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"5000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"4000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"5000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"7000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 9 #"string<=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 24 3 1 #"("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")) "
0 0 24 3 1 #"("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               (("
0 0 14 3 9 #"string>=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 24 3 1 #"("
0 0 14 3 11 #"widget-name"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; (listof Widget) Bst -> Bst"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insert-all"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 2 #") "
0 0 14 3 4 #"BST1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insert-all"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"1000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"8000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 14 3 4 #"BST1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"5000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"4000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 24 3 1 #"("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"1000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"7000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"8000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"insert-all"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 2 #") "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"insert-all"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 3 #") ("
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"low"
0 0 24 3 2 #") "
0 0 14 3 3 #"bst"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; String Bst -> Widget | false"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"find-name"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"4000\""
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"4000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"find-name"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"4000\""
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"find-name"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"4321\""
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"find-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))) "
0 0 24 3 1 #"("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               (("
0 0 14 3 9 #"string<=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))) "
0 0 24 3 1 #"("
0 0 14 3 9 #"find-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               (("
0 0 14 3 9 #"string>=?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #" ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 4 #"))) "
0 0 24 3 1 #"("
0 0 14 3 9 #"find-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Bst -> Image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 6           4 21 219
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0)) 255 \"white\")) #(str"
 #"uct:bb 0 0 0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-bst"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-widget"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"4000\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 4 #"BST1"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 3 #")) "
0 6           4 21 17440
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 3.5 13.5 #(struct:text \" \""
 #" 0 1 \"black\" 24 #f swiss normal normal #f))) #(struct:translate 7."
 #"0 0.0 #(struct:translate 7.0 13.5 #(struct:text \"T\" 0 1 \"black\" "
 #"24 #f swiss normal normal #f))))) #(struct:translate 21.0 0.0 #(stru"
 #"ct:translate 3.5 13.5 #(struct:text \":\" 0 1 \"black\" 24 #f swiss "
 #"normal normal #f))))) #(struct:translate 28.0 0.0 #(struct:translate"
 #" 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal norma"
 #"l #f))))) #(struct:translate 35.0 0.0 #(struct:translate 6.5 13.5 #("
 #"struct:text \"4\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #("
 #"struct:translate 48.0 0.0 #(struct:translate 6.5 13.5 #(struct:text "
 #"\"0\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:trans"
 #"late 61.0 0.0 #(struct:translate 6.5 13.5 #(struct:text \"0\" 0 1 \""
 #"black\" 24 #f swiss normal normal #f))))) #(struct:translate 74.0 0."
 #"0 #(struct:translate 6.5 13.5 #(struct:text \"0\" 0 1 \"black\" 24 #"
 #"f swiss normal normal #f))))) #(struct:translate 0 27.0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 3.5 13.5 #(struct"
 #":text \" \" 0 1 \"black\" 24 #f swiss normal normal #f))) #(struct:t"
 #"ranslate 7.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1"
 #" \"black\" 24 #f swiss normal normal #f))))) #(struct:translate 14.0"
 #" 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 2"
 #"4 #f swiss normal normal #f))))) #(struct:translate 21.0 0.0 #(struc"
 #"t:translate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 28.0 0.0 #(struct:translate "
 #"3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal normal"
 #" #f))))) #(struct:translate 35.0 0.0 #(struct:translate 6.5 13.5 #(s"
 #"truct:text \"L\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(s"
 #"truct:translate 48.0 0.0 #(struct:"
 #"translate 3.5 13.5 #(struct:text \":\" 0 1 \"black\" 24 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 55.0 0.0 #(struct:translate 3."
 #"5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal normal #"
 #"f))))) #(struct:translate 62.0 0.0 #(struct:translate 6.5 13.5 #(str"
 #"uct:text \"5\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(str"
 #"uct:translate 75.0 0.0 #(struct:translate 6.5 13.5 #(struct:text \"0"
 #"\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:translat"
 #"e 88.0 0.0 #(struct:translate 6.5 13.5 #(struct:text \"0\" 0 1 \"bla"
 #"ck\" 24 #f swiss normal normal #f))))) #(struct:translate 101.0 0.0 "
 #"#(struct:translate 6.5 13.5 #(struct:text \"0\" 0 1 \"black\" 24 #f "
 #"swiss normal normal #f))))) #(struct:translate 0 27.0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal n"
 #"ormal #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 13.5 #"
 #"(struct:text \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #"
 #"(struct:translate 14.0 0.0 #(struct:translate 3.5 13.5 #(struct:text"
 #" \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 21.0 0.0 #(struct:translate"
 #" 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal norma"
 #"l #f))))) #(struct:translate 28.0 0.0 #(struct:translate 3.5 13.5 #("
 #"struct:text \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #("
 #"struct:translate 35.0 0.0 #(struct:translate 3.5 13.5 #(struct:text "
 #"\" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:trans"
 #"late 42.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \""
 #"black\" 24 #f swiss normal normal #f))))) #(struct:translate 49.0 0."
 #"0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #"
 #"f swiss normal normal #f))))) #(struct:translate 56.0 0.0 #(struct:t"
 #"ranslate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss norm"
 #"al normal #f))))) #(struct:translate 63.0 0.0 #(struct:translate 6.5"
 #" 13.5 #(struct:text \"L\" 0 1 \"black\" 24 #f swiss normal normal #f"
 #"))))) #(struct:translate 76.0 0.0 #(struct:translate 3.5 13.5 #(stru"
 #"ct:text \":\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 83.0 0.0 #(struct:tr"
 #"anslate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss norma"
 #"l normal #f))))) #(struct:translate 90.0 0.0 #(struct:translate 6.5 "
 #"13.5 #(struct:text \"4\" 0 1 \"black\" 24 #f swiss normal normal #f)"
 #")))) #(struct:translate 103.0 0.0 #(struct:translate 6.5 13.5 #(stru"
 #"ct:text \"0\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 116.0 0.0 #(struct:translate 6.5 13.5 #(struct:text \"0"
 #"\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:translat"
 #"e 129.0 0.0 #(struct:translate 6.5 13.5 #(struct:text \"0\" 0 1 \"bl"
 #"ack\" 24 #f swiss normal normal #f))))) #(struct:translate 0 27.0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 0 0 0 0)) 255 \"white\"))))) #(str"
 #"uct:translate 0 27.0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0)) 2"
 #"55 \"white\"))))))) #(struct:translate 0 54.0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 3.5"
 #" 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal normal #f"
 #"))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 13.5 #(struct:"
 #"text \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:"
 #"translate 14.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0"
 #" 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:translate 21"
 #".0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"black\""
 #" 24 #f swiss normal normal #f))))) #(struct:translate 28.0 0.0 #(str"
 #"uct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss"
 #" normal normal #f))))) #(struct:translate 35.0 0.0 #(struct:translat"
 #"e 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal norm"
 #"al #f))))) #(struct:translate 42.0 0.0 #(struct:translate 3.5 13.5 #"
 #"(struct:text \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #"
 #"(struct:translate 49.0 0.0 #(struct:translate 3.5 13.5 #(struct:text"
 #" \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 56.0 0.0 #(struct:translate"
 #" 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal norma"
 #"l #f))))) #(struct:translate 63.0 0.0 #(struct:translate 8.5 13.5 #("
 #"struct:text \"R\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #("
 #"struct:translate 80.0 0.0 #(struct:translate 3.5 13.5 #(struct:text "
 #"\":\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:trans"
 #"late 87.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \""
 #"black\" 24 #f swiss normal normal #f))))) #(struct:translate 94.0 0."
 #"0 #(struct:translate 6.5 13.5 #(struct:text \"7\" 0 1 \"black\" 24 #"
 #"f swiss normal normal #f))))) #(struct:translate 107.0 0.0 #(struct:"
 #"translate 6.5 13.5 #(struct:text \"0\" 0 1 \"black\" 24 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 120.0 0.0 #(struct:translate 6"
 #".5 13.5 #(struct:text \"0\" 0 1 \"black\" 24 #f swiss normal normal "
 #"#f))))) #(struct:translate 133.0 0.0 #(struct:translate 6.5 13.5 #(s"
 #"truct:text \"0\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(s"
 #"truct:translate 0 27.0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0))"
 #" 255 \"white\"))))) #(struct:translate 0 27.0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 0 0 0 0)) 255 \"white\"))))))))) #(struct:translate 0 "
 #"108.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate"
 #" 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal norma"
 #"l #f))) #(struct:translate 7.0 0.0 #(struct:translate 3.5 13.5 #(str"
 #"uct:text \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(str"
 #"uct:translate 14.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" "
 #"\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:translat"
 #"e 21.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"bla"
 #"ck\" 24 #f swiss normal normal #f))))) #(struct:translate 28.0 0.0 #"
 #"(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f s"
 #"wiss normal normal #f))))) #(struct:translate 35.0 0.0 #(struct:tran"
 #"slate 8.5 13.5 #(struct:text \"R\" 0 1 \"black\" 24 #f swiss normal "
 #"normal #f))))) #(struct:translate 52.0 0.0 #(struct:translate 3.5 13"
 #".5 #(struct:text \":\" 0 1 \"black\" 24 #f swiss normal normal #f)))"
 #")) #(struct:translate 59.0 0.0 #(struct:translate 3.5 13.5 #(struct:"
 #"text \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:"
 #"translate 66.0 0.0 #(struct:translate 6.5 13.5 #(struct:text \"5\" 0"
 #" 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:translate 79"
 #".0 0.0 #(struct:translate 6.5 13.5 #(struct:text \"0\" 0 1 \"black\""
 #" 24 #f swiss normal normal #f))))) #(struct:translate 92.0 0.0 #(str"
 #"uct:translate 6.5 13.5 #(struct:text \"0\" 0 1 \"black\" 24 #f swiss"
 #" normal normal #f))))) #(struct:translate 105.0 0.0 #(struct:transla"
 #"te 6.5 13.5 #(struct:text \"0\" 0 1 \"black\" 24 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 0 27.0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 3.5 13.5 #("
 #"struct:text \" \" 0 1 \"black\" 24 #f swiss normal normal #f))) #(st"
 #"ruct:translate 7.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" "
 #"\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:translat"
 #"e 14.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"bla"
 #"ck\" 24 #f swiss normal normal #f))))) #(struct:translate 21.0 0.0 #"
 #"(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f s"
 #"wiss normal normal #f))))) #(struct:translate 28.0 0.0 #(struct:tran"
 #"slate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal "
 #"normal #f))))) #(struct:translate 35.0 0.0 #(struct:translate 3.5 13"
 #".5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal normal #f)))"
 #")) #(struct:translate 42.0 0.0 #(struct:translate 3.5 13.5 #(struct:"
 #"text \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:"
 #"translate 49.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0"
 #" 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:translate 56"
 #".0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"black\""
 #" 24 #f swiss normal normal #f))))) #(struct:translate 63.0 0.0 #(str"
 #"uct:translate 6.5 13.5 #(struct:text \"L\" 0 1 \"black\" 24 #f swiss"
 #" normal normal #f))))) #(struct:translate 76.0 0.0 #(struct:translat"
 #"e 3.5 13.5 #(struct:text \":\" 0 1 \"black\" 24 #f swiss normal norm"
 #"al #f))))) #(struct:translate 83.0 0.0 #(struct:translate 3.5 13.5 #"
 #"(struct:text \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #"
 #"(struct:translate 90.0 0.0 #(struct:translate 6.5 13.5 #(struct:text"
 #" \"4\" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 103.0 0.0 #(struct:translate 6.5 13.5 #(struct:text \"0\" 0 1 "
 #"\"black\" 24 #f swiss normal normal #f))))) #(struct:translate 116.0"
 #" 0.0 #(struct:translate 6.5 13.5 #(struct:text \"0\" 0 1 \"black\" 2"
 #"4 #f swiss normal normal #f))))) #(struct:translate 129.0 0.0 #(stru"
 #"ct:translate 6.5 13.5 #(struct:text \"0\" 0 1 \"black\" 24 #f swiss "
 #"normal normal #f))))) #(struct:translate 0 27.0 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 0 0 0 0)) 255 \"white\"))))) #(struct:translate 0 27"
 #".0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0)) 255 \"white\"))))))"
 #") #(struct:translate 0 54.0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:translate 3.5 13.5 #(struct:tex"
 #"t \" \" 0 1 \"black\" 24 #f swiss normal normal #f))) #(struct:trans"
 #"late 7.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"b"
 #"lack\" 24 #f swiss normal normal #f))))) #(struct:translate 14.0 0.0"
 #" #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f"
 #" swiss normal normal #f))))) #(struct:translate 21.0 0.0 #(struct:tr"
 #"anslate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss norma"
 #"l normal #f))))) #(struct:translate 28.0 0.0 #(struct:translate 3.5 "
 #"13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swiss normal normal #f)"
 #")))) #(struct:translate 35.0 0.0 #(struct:translate 3.5 13.5 #(struc"
 #"t:text \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struc"
 #"t:translate 42.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \""
 #" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:translate "
 #"49.0 0.0 #(struct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"black"
 #"\" 24 #f swiss normal normal #f))))) #(struct:translate 56.0 0.0 #(s"
 #"truct:translate 3.5 13.5 #(struct:text \" \" 0 1 \"black\" 24 #f swi"
 #"ss normal normal #f))))) #(struct:translate 63.0 0.0 #(struct:transl"
 #"ate 8.5 13.5 #(struct:text \"R\" 0 1 \"black\" 24 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 80.0 0.0 #(struct:translate 3.5 13.5"
 #" #(struct:text \":\" 0 1 \"black\" 24 #f swiss normal normal #f)))))"
 #" #(struct:translate 87.0 0.0 #(struct:translate 3.5 13.5 #(struct:te"
 #"xt \" \" 0 1 \"black\" 24 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 94.0 0.0 #(struct:translate 6.5 13.5 #(struct:text \"7\" 0 1"
 #" \"black\" 24 #f swiss normal normal #f))))) #(struct:translate 107."
 #"0 0.0 #(struct:translate 6.5 13.5 #(struct:text \"0\" 0 1 \"black\" "
 #"24 #f swiss normal normal #f))))) #(struct:translate 120.0 0.0 #(str"
 #"uct:translate 6.5 13.5 #(struct:text \"0\" 0 1 \"black\" 24 #f swiss"
 #" normal normal #f))))) #(struct:translate 133.0 0.0 #(struct:transla"
 #"te 6.5 13.5 #(struct:text \"0\" 0 1 \"black\" 24 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 0 27.0 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 0 0 0 0)) 255 \"white\"))))) #(struct:translate 0 27.0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 0 0 0 0)) 255 \"white\")))))))) #(struc"
 #"t:bb 146.0 189.0 189.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 5 #")    "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"MTS"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"blanks"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 12 #"list->string"
0 0 24 3 2 #" ("
0 0 14 3 10 #"build-list"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 21 3 3 #"#\\ "
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"render-helper"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 2 #"LR"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" (("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 3 #"MTS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 11 #"above/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-widget"
0 0 24 3 2 #" ("
0 0 14 3 10 #"bst-widget"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 2 #"LR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bst-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"L\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                        ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bst-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"R\""
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-widget"
0 0 24 3 1 #" "
0 0 14 3 6 #"widget"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 2 #"LR"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #"[("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"LR"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"R\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 6 #"blanks"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 6 #"\" R: \""
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                         ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 6 #"widget"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"LR"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 6 #"blanks"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 19 3 6 #"\" L: \""
0 0 24 29 1 #"\n"
0 0 24 3 58
#"                                                         ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 6 #"widget"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 6 #"blanks"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 19 3 6 #"\" T: \""
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 11 #"widget-name"
0 0 24 3 1 #" "
0 0 14 3 6 #"widget"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 14 3 9 #"TEXT-SIZE"
0 0 24 3 1 #" "
0 0 14 3 10 #"TEXT-COLOR"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"render-helper"
0 0 24 3 1 #" "
0 0 14 3 3 #"bst"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
